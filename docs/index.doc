/** @page index Main Page

This is documentation for @b libxr.

This is brand new XML-RPC library with support for:

  - SSL3/TLS1 using OpenSSL
  - IPV6 as soon as OpenSSL 0.9.9 is released
  - persistent connections over HTTP/1.1
  - XML-RPC interface description language (XDL)
  - XML-RPC client stubs/servlet skels compiler
  - multiple servlets per server
  - servlet lifetime (init -- call -- call -- fini)
  - multiplatform (linux, migw32 on windows)

@section toc Table of Contents
@li @ref xdl
@li @ref xdlc
@li @ref xr-value.h "XR Value API"
@li @ref xr-call.h "XR Call API"
@li @ref xr-client.h "XR Client API"
@li @ref xr-server.h "XR Server API"
*/

/** @page xdl XDL Language

XDL language is used to describe XML-RPC servlet interfaces and data
types. You may use @ref xdlc to compile XDL file into C source files
that implement client and server interfaces.

Here is description of two sample servlets:

@code
namespace EEE;

struct Item
{
    string      uid;
    string      type;
    time        from_date;
    time        to_date;
    blob        ical;
}

struct Calendar
{
    string      uid;
    time        create_date;
    blob        ical;
    array<array<Item>> items;
}

struct User
{
    string          uid;
    time            create_date;
    blob            ical;
    Calendar        maincal;
    array<Calendar> calendars;
}

servlet Client
{
    struct Date
    {
      int day;
      int month;
      int year;
      int weekday;
    }
    struct Time
    {
      int hour;
      int minute;
    }
    struct DateTime
    {
      Date date;
      Time time;
    }

    DateTime getTime();
    
    User getUserData(string name);
    boolean setUserData(User data);
}

servlet Server
{
    boolean auth(string username, string password);
    array<boolean> getList();
    array<array<boolean>> getListList();
    boolean setList(array<User> list);
}
@endcode

*/

/** @page xdlc XDL Language Compiler

XDL Compiler outputs following files: (Lets suppose that we have Test
servlet and EEE namespace)

<pre>
  .
  |-- EEETest.h        -- Test interface types definitions
  |-- EEETest.c        -- Test interface types access methods
  |-- EEETest.xrc.c    -- implementation of client interface for Test servlet
  |-- EEETest.xrm.h    -- marchalizers/demarchalizers for Test servlet types
  |-- EEETest.xrs.h    -- server interface public method for servlet registration
  |-- EEETest.xrs.c    -- servlet interface implementation
  |-- EEETest.stubs.h  -- servlet stubs header
  |-- EEETest.stubs.c  -- servlet stubs implementation
  |-- EEECommon.h      -- common types declared outside of servlet
  |-- EEECommon.c      -- common types access methods (for freeing/allocation)
  `-- EEECommon.xrm.h  -- marchalizers/demarchalizers for common types
</pre>

*/
